---
- name: Helm ile Kubernetes Dağıtım ve Güvenlik Denetimi
  hosts: k8s_cluster
  become: true
  vars_files:
    - secrets.yml 

  vars:
    helm_release_name: "my-app"
    k8s_namespace: "default"
    frontend_image_repo: "meyfcsalik/frontend"
    frontend_image_tag: "latest"
    backend_image_repo: "meyfcsalik/backend"
    backend_image_tag: "latest"
    app_domain: "app.mustafasalik.de"
    enable_selenium_tests: true

  tasks:
    # YENİ EKLENEN GÖREV: Selenium test betiği ConfigMap'i oluştur
    - name: Selenium test betiği ConfigMap'i oluştur
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('file', '{{ playbook_dir }}/selenium-test-configmap.yaml') | from_yaml }}"
      tags: configmap

    # 1. Helm Dağıtımı
    - name: Helm chart'ı güncelle
      kubernetes.core.helm:
        name: "{{ helm_release_name }}"
        chart_ref: "{{ playbook_dir }}/../helm/my-app/" # Helm chart yolu my-app olarak güncellendi
        release_namespace: "{{ k8s_namespace }}"
        create_namespace: yes
        values:
          frontend:
            image:
              repository: "{{ frontend_image_repo }}"
              tag: "{{ frontend_image_tag }}"
          backend:
            image:
              repository: "{{ backend_image_repo }}"
              tag: "{{ backend_image_tag }}"
      tags: deploy

    # 2. Güvenlik Politikaları
    - name: Pod Security Admission (PSA) uygula
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: policy/v1beta1
          kind: PodSecurityPolicy
          metadata:
            name: restricted-psp
          spec:
            privileged: false
            seLinux:
              rule: RunAsAny
            runAsUser:
              rule: MustRunAsNonRoot
            fsGroup:
              rule: RunAsAny
            volumes:
            - 'configMap'
            - 'secret'
      tags: security

    # 3. Ağ Politikası
    - name: Gelişmiş NetworkPolicy tanımla
      kubernetes.core.k8s:
        definition:
          apiVersion: networking.k8s.io/v1
          kind: NetworkPolicy
          metadata:
            name: allow-monitoring-only
          spec:
            podSelector: {}
            policyTypes:
            - Ingress
            ingress:
            - ports:
              - protocol: TCP
                port: 9100
              from:
              - namespaceSelector:
                  matchLabels:
                    kubernetes.io/metadata.name: monitoring
      tags: security

    # 4. Test Otomasyonu - Selenium test job'u başlat
    - name: Selenium test job'u başlat
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: batch/v1
          kind: Job
          metadata:
            name: "{{ helm_release_name }}-selenium-test-{{ lookup('pipe', 'date +%s') }}"
            namespace: "{{ k8s_namespace }}"
          spec:
            ttlSecondsAfterFinished: 300
            template:
              spec:
                containers:
                - name: selenium-runner
                  image: python:3.9-slim
                  command: ["python3"]
                  args:
                    - "/app/run_tests.py"
                    - "--env"
                    - "{{ lookup('env', 'DEPLOY_ENV_NAME') }}"
                    - "--app-url"
                    - "http://{{ helm_release_name }}.{{ k8s_namespace }}.svc.cluster.local"
                  env:
                    - name: GRID_URL
                      value: "http://selenium-grid:4444/wd/hub"
                  volumeMounts:
                    - name: test-scripts-volume
                      mountPath: /app
                volumes:
                  - name: test-scripts-volume
                    configMap:
                      name: selenium-test-script
                restartPolicy: Never
            backoffLimit: 0
      when: enable_selenium_tests
      tags: testing

    # 5. Vault Şifre Rotasyonu
    - name: Vault şifresini otomatik döndür
      ansible.builtin.command: >
        ansible-vault rekey secrets.yml
        --new-vault-password-file {{ playbook_dir }}/vault_pass_new.txt
      args:
        creates: "{{ playbook_dir }}/vault_pass_new.txt" # Burası düzeltildi
      run_once: true
      tags: vault

  post_tasks:
    - name: Dağıtım başarısını doğrula (Podları kontrol et)
      kubernetes.core.k8s_info:
        kind: Pod
        namespace: "{{ k8s_namespace }}"
        label_selectors:
          - app.kubernetes.io/instance={{ helm_release_name }}
      register: deployment_pods
      failed_when: deployment_pods.resources | length == 0

    - name: Uygulama sağlık kontrolü
      uri:
        url: "http://{{ helm_release_name }}.{{ k8s_namespace }}.svc.cluster.local/health"
        return_content: yes
      register: health_check
      until: health_check.status == 200
      retries: 10
      delay: 5