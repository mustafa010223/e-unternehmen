---
- name: K8s Uygulama Dağıtımı ve Güvenli Yönetim
  hosts: k8s_master
  become: true
  vars:
    system_user: "mustafa"
    helm_env: "staging"
    image_tag: "latest"
    docker_username: "meyfcsalik"
    helm_chart_path: "/home/{{ system_user }}/e-unternehmen/helm/myapp"
    helm_release_name: "uygulama-adi"
    k8s_namespace: "{{ helm_release_name }}-{{ helm_env }}"
    enable_selenium_tests: true
    qradar_integration: false
    selenium_grid_url: "http://selenium-grid:4444/wd/hub"

  environment:
    KUBECONFIG: "/home/{{ system_user }}/.kube/config"

  vars_files:
    - secrets.yml

  tasks:
    - name: Kubeconfig kontrolü
      ansible.builtin.stat:
        path: "{{ KUBECONFIG }}"
      register: kubeconfig
      changed_when: false

    - name: Kubeconfig dizini oluştur
      ansible.builtin.file:
        path: "/home/{{ system_user }}/.kube"
        state: directory
        mode: '0700'
        owner: "{{ system_user }}"
        group: "{{ system_user }}"
      when: not kubeconfig.stat.exists

    - name: K3s konfigürasyonunu kopyala
      ansible.builtin.copy:
        src: "/etc/rancher/k3s/k3s.yaml"
        dest: "{{ KUBECONFIG }}"
        remote_src: true
        mode: '0600'
        owner: "{{ system_user }}"
        group: "{{ system_user }}"
      when: not kubeconfig.stat.exists
      notify: Kubeconfig Oluşturuldu

    - name: Helm kontrolü
      ansible.builtin.command: helm version
      register: helm_check
      changed_when: false
      ignore_errors: true

    - name: Helm kur (Debian/Ubuntu)
      ansible.builtin.apt:
        name: helm
        state: present
      when: 
        - helm_check.rc != 0 
        - ansible_os_family == "Debian"

    - name: Helm kur (RHEL/CentOS)
      ansible.builtin.yum:
        name: helm
        state: present
      when: 
        - helm_check.rc != 0 
        - ansible_os_family == "RedHat"

    - name: Ana dağıtım ve test işlemleri
      block:
        - name: Namespace oluştur
          kubernetes.core.k8s:
            state: present
            kind: Namespace
            name: "{{ k8s_namespace }}"

        - name: Helm ile uygulama deploy et
          kubernetes.core.helm:
            name: "{{ helm_release_name }}"
            chart_ref: "{{ helm_chart_path }}"
            release_namespace: "{{ k8s_namespace }}"
            set_values:
              image:
                tag: "{{ image_tag }}"
                repository: "{{ docker_username }}"
              monitoring:
                grafana:
                  adminPassword: "{{ vault_grafana_password }}"
              registry:
                password: "{{ vault_docker_password }}"
            values_files:
              - "{{ helm_chart_path }}/values-{{ helm_env }}.yaml"
            state: present

        - name: Selenium testlerini çalıştır
          community.docker.docker_container_exec:
            container: "selenium-chrome"
            command: "python3 /tests/run_tests.py --env {{ helm_env }}"
          when: enable_selenium_tests
          delegate_to: localhost

        - name: QRadar log entegrasyonu
          kubernetes.core.k8s:
            state: present
            kind: ConfigMap
            name: qradar-integration
            namespace: "{{ k8s_namespace }}"
            src: "/home/{{ system_user }}/e-unternehmen/ansible/qradar-config.yaml"
          when: qradar_integration

      rescue:
        - name: Helm rollback
          kubernetes.core.helm:
            name: "{{ helm_release_name }}"
            release_namespace: "{{ k8s_namespace }}"
            state: absent

  handlers:
    - name: Kubeconfig Oluşturuldu
      ansible.builtin.debug:
        msg: "✅ Kubeconfig başarıyla oluşturuldu"

