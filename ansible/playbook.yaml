---
- name: Helm ile Kubernetes Dağıtım ve Güvenlik Denetimi
  hosts: k3s_cluster
  become: true
  
  vars_files:
    - secrets/secrets.yaml

  # Bu değişkenler, CI/CD'den --extra-vars ile değer gelmediğinde
  # yerel çalıştırmalar için varsayılan değerler sağlar.
  vars:
    helm_release_name: "my-app"
    k8s_namespace: "default"
    frontend_image_repo: "meyfcsalik/frontend"
    frontend_image_tag: "latest"
    backend_image_repo: "meyfcsalik/backend"
    backend_image_tag: "latest"
    playbook_dir: "{{ lookup('env', 'PWD') }}/ansible"

  tasks:
    # --------------------------------------------------------------------------
    # GÖREV BLOKU 1: Kubeconfig Dosyasını Ayarlama
    # --------------------------------------------------------------------------
    - name: Kubeconfig Dosyasını Ayarla ve Sunucu Adresini Güncelle
      block:
        - name: /home/{{ ansible_user }} dizininin var olduğundan emin ol
          ansible.builtin.file:
            path: /home/{{ ansible_user }}
            state: directory
            owner: "{{ ansible_user }}"
            group: "{{ ansible_user }}"
            mode: '0755'

        - name: Kubeconfig dosyasını /etc/rancher/k3s/k3s.yaml'dan kopyala
          ansible.builtin.copy:
            src: /etc/rancher/k3s/k3s.yaml
            dest: /home/{{ ansible_user }}/kubeconfig
            owner: "{{ ansible_user }}"
            group: "{{ ansible_user }}"
            mode: '0600'
            remote_src: yes

        - name: Kubeconfig sunucu adresini localhost'tan gerçek IP'ye güncelle
          ansible.builtin.replace:
            path: /home/{{ ansible_user }}/kubeconfig
            regexp: 'server: https:\/\/((127\.0\.0\.1)|(localhost)):6443'
            replace: 'server: https://{{ ansible_host }}:6443'
      tags: kubeconfig_setup

    # --------------------------------------------------------------------------
    # GÖREV BLOKU 2: Kubernetes Kaynakları
    # --------------------------------------------------------------------------
    - name: Selenium test betiği ConfigMap'ini oluştur
      # --- DÜZELTME: "Namespace is required" hatasını gidermek için ---
      # Dışarıdaki YAML dosyası 'combine' filtresi ile 'namespace' içerecek
      # şekilde zenginleştiriliyor. Bu sayede kaynak dosya eksik olsa bile
      # playbook hatasız çalışır.
      kubernetes.core.k8s:
        state: present
        definition: "{{ (lookup('file', playbook_dir + '/configs/selenium-test-configmap.yaml') | from_yaml) | combine({'metadata': {'namespace': k8s_namespace}}, recursive=True) }}"
        kubeconfig: /home/{{ ansible_user }}/kubeconfig
      tags: configmap

    - name: Helm chart'ını dağıt veya güncelle
      kubernetes.core.helm:
        name: "{{ helm_release_name }}"
        chart_ref: "{{ playbook_dir }}/../helm/my-app/"
        release_namespace: "{{ k8s_namespace }}"
        create_namespace: yes
        values:
          frontend:
            image:
              repository: "{{ frontend_image_repo }}"
              tag: "{{ frontend_image_tag }}"
          backend:
            image:
              repository: "{{ backend_image_repo }}"
              tag: "{{ backend_image_tag }}"
        kubeconfig: /home/{{ ansible_user }}/kubeconfig
      tags: deploy

    # --------------------------------------------------------------------------
    # GÖREV BLOKU 3: Güvenlik ve Testler
    # --------------------------------------------------------------------------
    - name: Pod Güvenlik Standartlarını uygula
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: "{{ k8s_namespace }}"
            labels:
              pod-security.kubernetes.io/enforce: baseline
        kubeconfig: /home/{{ ansible_user }}/kubeconfig
      tags: security

    - name: Selenium test Job'unu başlat
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: batch/v1
          kind: Job
          metadata:
            name: "{{ helm_release_name }}-selenium-test-{{ lookup('pipe', 'date +%s') }}"
            namespace: "{{ k8s_namespace }}"
          spec:
            ttlSecondsAfterFinished: 300
            template:
              spec:
                containers:
                  - name: selenium-runner
                    image: python:3.9-slim
                    command: ["python3", "/app/run_tests.py"]
                volumes:
                  - name: test-scripts-volume
                    configMap:
                      name: selenium-test-script
                restartPolicy: Never
            backoffLimit: 0
        kubeconfig: /home/{{ ansible_user }}/kubeconfig
      tags: testing