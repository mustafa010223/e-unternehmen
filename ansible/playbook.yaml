---
- name: Helm ile Kubernetes Dağıtım ve Güvenlik Denetimi
  hosts: k3s_cluster
  become: true

  vars_files:
    - secrets/secrets.yaml

  vars:
    helm_release_name: "my-app"
    k8s_namespace: "default"
    frontend_image_repo: "meyfcsalik/frontend"
    frontend_image_tag: "latest"
    backend_image_repo: "meyfcsalik/backend"
    backend_image_tag: "latest"
    playbook_dir: "{{ lookup('env', 'PWD') }}/ansible"
    critical_paths_k3s:
      - /etc/rancher/k3s/
      - /var/lib/rancher/k3s/server/
      - /var/lib/kubelet

  tasks:
    # --------------------------------------------------------------------------
    # GÖREV BLOKU 1: Kubeconfig Dosyasını Ayarlama
    # --------------------------------------------------------------------------
    - name: Kubeconfig Dosyasını Ayarla ve Sunucu Adresini Güncelle
      block:
        - name: Kullanıcı ev dizininin var olduğundan emin ol
          ansible.builtin.file:
            path: "/home/{{ ansible_user }}"
            state: directory
            owner: "{{ ansible_user }}"
            group: "{{ ansible_user }}"
            mode: '0755'

        - name: Kubeconfig dosyasını kopyala ve IP'yi güncelle
          ansible.builtin.template:
            src: templates/kubeconfig.j2
            dest: "/home/{{ ansible_user }}/kubeconfig"
            owner: "{{ ansible_user }}"
            group: "{{ ansible_user }}"
            mode: '0600'
      tags: kubeconfig_setup

    # --------------------------------------------------------------------------
    # GÖREV BLOKU 2: Kubernetes Kaynakları (ConfigMap ve Helm Dağıtımı)
    # --------------------------------------------------------------------------
    - name: Selenium test betiği ConfigMap'ini oluştur
      kubernetes.core.k8s:
        state: present
        definition: "{{ (lookup('file', playbook_dir + '/configs/selenium-test-configmap.yaml') | from_yaml) | combine({'metadata': {'namespace': k8s_namespace}}, recursive=True) }}"
        kubeconfig: "/home/{{ ansible_user }}/kubeconfig"
      tags: configmap

    - name: Helm chart'ını dağıt veya güncelle
      kubernetes.core.helm:
        name: "{{ helm_release_name }}"
        chart_ref: "{{ playbook_dir }}/../helm/my-app/"
        release_namespace: "{{ k8s_namespace }}"
        create_namespace: yes
        values:
          frontend:
            image:
              repository: "{{ frontend_image_repo }}"
              tag: "{{ frontend_image_tag }}"
          backend:
            image:
              repository: "{{ backend_image_repo }}"
              tag: "{{ backend_image_tag }}"
        kubeconfig: "/home/{{ ansible_user }}/kubeconfig"
      tags: deploy

    # --------------------------------------------------------------------------
    # GÖREV BLOKU 3: Güvenlik Denetimleri
    # --------------------------------------------------------------------------
    - name: Güvenlik denetimlerini çalıştır
      tags: security
      block:
        # DÜZELTME VE İYİLEŞTİRME: Güvenlik denetimleri daha sağlam ve okunabilir hale getirildi.
        - name: Kritik K3s dizinlerinin varlığını ve izinlerini doğrula
          ansible.builtin.stat:
            path: "{{ item }}"
          loop: "{{ critical_paths_k3s }}"
          register: k3s_dirs_check

        - name: Eksik kritik K3s dizinleri varsa uyar ve başarısız ol
          ansible.builtin.fail:
            msg: "GÜVENLİK RİSKİ: Kritik K3s dizini bulunamadı -> {{ item.item }}. K3s kurulumunuzu kontrol edin."
          loop: "{{ k3s_dirs_check.results }}"
          when: not item.stat.exists

        - name: Kritik dizinlerdeki herkese açık yazılabilir dosyaları bul
          ansible.builtin.command: "find {{ item }} -type f -perm /o=w"
          loop: "{{ critical_paths_k3s }}"
          register: insecure_files_check
          changed_when: false
          failed_when: insecure_files_check.rc > 1 # 'find' bulamazsa rc=1 döner, bu hata sayılmaz.

        - name: Güvensiz dosya izinleri varsa uyar ve başarısız ol
          ansible.builtin.fail:
            msg: "GÜVENLİK AÇIĞI! {{ item.item }} yolunda güvensiz izinlere sahip dosya(lar) bulundu: {{ item.stdout_lines }}"
          loop: "{{ insecure_files_check.results }}"
          when: item.stdout != ""

    # --------------------------------------------------------------------------
    # GÖREV BLOKU 4: Kubernetes Güvenlik ve Testler
    # --------------------------------------------------------------------------
    - name: Pod Güvenlik Standartlarını uygula
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: "{{ k8s_namespace }}"
            labels:
              pod-security.kubernetes.io/enforce: baseline
        kubeconfig: "/home/{{ ansible_user }}/kubeconfig"
      tags: security

    - name: Selenium test Job'unu başlat
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: batch/v1
          kind: Job
          metadata:
            name: "{{ helm_release_name }}-selenium-test-{{ lookup('pipe', 'date +%s') }}"
            namespace: "{{ k8s_namespace }}"
          spec:
            ttlSecondsAfterFinished: 300
            template:
              spec:
                containers:
                  - name: selenium-runner
                    image: python:3.9-slim
                    command: ["python3", "/app/run_tests.py"]
                    volumeMounts:
                      - name: test-scripts-volume
                        mountPath: /app
                volumes:
                  - name: test-scripts-volume
                    configMap:
                      name: selenium-test-script
                restartPolicy: Never
            backoffLimit: 0
        kubeconfig: "/home/{{ ansible_user }}/kubeconfig"
      tags: testing