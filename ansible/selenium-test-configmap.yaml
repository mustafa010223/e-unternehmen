apiVersion: v1
kind: ConfigMap
metadata:
  name: selenium-test-script
data:
  run_tests.py: |
    from selenium import webdriver
    from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
    import os
    import sys
    import argparse
    import time

    def run_tests(env, app_url):
        # Selenium Grid URL'ini ortam değişkeninden al
        grid_url = os.getenv("GRID_URL", "http://selenium-grid:4444/wd/hub")
        
        print(f"Connecting to Selenium Grid at: {grid_url}")
        print(f"Testing application at: {app_url}")

        options = webdriver.ChromeOptions()
        # Opsiyonel: Headless modda çalıştırmak için
        options.add_argument("--headless")
        options.add_argument("--no-sandbox")
        options.add_argument("--disable-dev-shm-usage")
        options.add_argument("--window-size=1920,1080") # Çözünürlük ayarlama
        
        driver = None
        try_count = 0
        max_tries = 5
        
        while try_count < max_tries:
            try:
                driver = webdriver.Remote(
                    command_executor=grid_url,
                    options=options
                )
                break # Bağlantı başarılı oldu, döngüden çık
            except Exception as e:
                try_count += 1
                print(f"Connection to Selenium Grid failed (attempt {try_count}/{max_tries}): {e}")
                if try_count < max_tries:
                    time.sleep(10) # Yeniden denemeden önce bekle
                else:
                    raise # Max deneme sayısına ulaşıldı, hata fırlat

        if not driver:
            raise Exception("Failed to connect to Selenium Grid after multiple retries.")

        try:
            driver.get(app_url)
            # Uygulamanızın ana sayfasının başlığını veya içeriğini kontrol edin
            # Kendi uygulamanızın başlığına veya beklediğiniz metne göre burayı güncelleyin
            assert "Ana Sayfa" in driver.title or "Welcome" in driver.page_source
            print(f"✅ {env} testi başarılı!")
        except AssertionError:
            print(f"‼️ Hata: {env} arayüz testi başarısız!")
            # Hata durumunda ekran görüntüsü almak faydalı olabilir
            driver.save_screenshot(f"/tmp/screenshot_{env}.png")
            print(f"Ekran görüntüsü /tmp/screenshot_{env}.png adresine kaydedildi.")
            sys.exit(1) # Başarısız olursa Job'ı başarısız olarak işaretle
        finally:
            if driver:
                driver.quit()

    if __name__ == "__main__":
        parser = argparse.ArgumentParser()
        parser.add_argument("--env", required=True)
        # app_url'i doğrudan Python betiğine argüman olarak geçirelim
        parser.add_argument("--app-url", required=True)
        args = parser.parse_args()
        
        run_tests(args.env, args.app_url)