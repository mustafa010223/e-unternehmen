apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "myapp.fullname" . }}-{{ .Values.mongodb.name }}
  labels:
    {{- include "myapp.labels" . | nindent 4 }}
    app.kubernetes.io/component: {{ .Values.mongodb.name }}
spec:
  serviceName: {{ .Values.mongodb.service.name | default (printf "%s-%s" (include "myapp.fullname" .) .Values.mongodb.name) }}
  replicas: {{ .Values.mongodb.replicaCount }}
  selector:
    matchLabels:
      {{- include "myapp.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: {{ .Values.mongodb.name }}
  template:
    metadata:
      labels:
        {{- include "myapp.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: {{ .Values.mongodb.name }}
      # annotations:
      #   prometheus.io/scrape: "true"
      #   prometheus.io/port: "9216" # MongoDB exporter portu
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "myapp.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Values.mongodb.name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.mongodb.image.repository }}:{{ .Values.mongodb.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.mongodb.image.pullPolicy }}
          ports:
            - name: mongodb
              containerPort: 27017
              protocol: TCP
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mongodb.auth.existingSecret | default (printf "%s-mongodb-credentials" (include "myapp.fullname" .)) }}
                  key: {{ .Values.mongodb.auth.usernameKey | default "mongodb-root-username" }}
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mongodb.auth.existingSecret | default (printf "%s-mongodb-credentials" (include "myapp.fullname" .)) }}
                  key: {{ .Values.mongodb.auth.passwordKey | default "mongodb-root-password" }}
            # {{- if .Values.mongodb.auth.replicaSet.enabled }}
            # - name: MONGO_REPLICA_SET_NAME
            #   value: {{ .Values.mongodb.auth.replicaSet.name | quote }}
            # {{- end }}
          volumeMounts:
            - name: mongodb-data
              mountPath: /data/db
          resources:
            {{- toYaml .Values.mongodb.resources | nindent 12 }}
          livenessProbe:
            {{- toYaml .Values.mongodb.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.mongodb.readinessProbe | nindent 12 }}
  {{- if .Values.mongodb.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: mongodb-data
        labels:
          {{- include "myapp.selectorLabels" . | nindent 10 }}
          app.kubernetes.io/component: {{ .Values.mongodb.name }}
        # annotations:
        #   {{- toYaml .Values.mongodb.persistence.annotations | nindent 10 }}
      spec:
        accessModes:
          {{- range .Values.mongodb.persistence.accessModes }}
          - {{ . | quote }}
          {{- end }}
        resources:
          requests:
            storage: {{ .Values.mongodb.persistence.size }}
        {{- if .Values.mongodb.persistence.storageClass }}
        {{- if (eq "-" .Values.mongodb.persistence.storageClass) }}
        storageClassName: ""
        {{- else }}
        storageClassName: "{{ .Values.mongodb.persistence.storageClass }}"
        {{- end }}
        {{- end }}
  {{- end }}